#!/usr/bin/python
import sys
# Read input from stdin and provide input before running code

def gcd(a, b):
    """Return greatest common divisor using Euclid's Algorithm."""
    while b:      
        a, b = b, a % b
    return a

def lcm(a, b):
    """Return lowest common multiple."""
    return a * b // gcd(a, b)

def lcmm(*args):
    """Return lcm of args."""   
    return reduce(lcm, args)

test_cases = input()
for i in range(0,test_cases):
	no_of_fount = input()
	vec = raw_input().rstrip().split()
	arr = []
	for j in vec:
		arr.append(int(j))	
	arr.sort()
	x = arr[len(arr)-1]
	j = 1
	l = 1
	for j in arr:
		l = lcm(l,j)
	#while 1 :
	#	num = x*j
	#	res = 1
	#	for k in range(0,len(arr)-1):
	#		if (num % arr[k]) != 0 :
	#			res = 0
	#			break
	#	if res:
	#		print num % 1000000007
	#		break
	#	j += 1
	print l%1000000007
	#print y		
sys.exit(0)
